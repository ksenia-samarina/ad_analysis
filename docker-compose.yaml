version: "3.9"

services:
  postgres:
    image: postgres:15
    container_name: ad_postgres
    restart: always
    environment:
      POSTGRES_DB: ad_db
      POSTGRES_USER: ad_user
      POSTGRES_PASSWORD: ad_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ad_user -d ad_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  # --- Flink JobManager ---
#  jobmanager:
#    image: flink:latest
#    container_name: jobmanager
#    depends_on:
#      - kafka
#    ports:
#      - "8081:8081" # Flink Dashboard
#      - "8000:8000" # PrometheusSink metrics
#    environment:
#      - |
#        FLINK_PROPERTIES=
#        jobmanager.rpc.address: jobmanager
#    command: jobmanager
#
#  # --- Flink TaskManager ---
#  taskmanager:
#    image: flink:latest
#    container_name: taskmanager
#    depends_on:
#      - jobmanager
#    environment:
#      - |
#        FLINK_PROPERTIES=
#        jobmanager.rpc.address: jobmanager
#        taskmanager.numberOfTaskSlots: 2
#    command: taskmanager

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped

volumes:
  postgres_data:
  grafana-data:
